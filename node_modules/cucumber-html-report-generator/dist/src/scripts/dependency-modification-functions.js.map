{"version":3,"file":"dependency-modification-functions.js","sourceRoot":"","sources":["../../../src/scripts/dependency-modification-functions.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,8CAAgC;AAChC,6CAA+B;AAC/B,2CAA6B;AAC7B,kDAA0B;AAC1B,oDAA4B;AAC5B,gDAAuB;AAEhB,MAAM,YAAY,GAAG,KAAK,EAAG,GAAW,EAAE,QAAgB,EAAqB,EAAE,CAAC,IAAI,OAAO,CAAW,CAAE,OAAO,EAAE,MAAM,EAAG,EAAE;IACnI,KAAK,CAAC,GAAG,CAAE,GAAG,EAAE,QAAQ,CAAC,EAAE;QACzB,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QAEvC,IAAK,UAAU,KAAK,GAAG,EAAG;YACxB,MAAM,CAAE,IAAI,KAAK,CAAE,iBAAiB,CAAE,CAAE,CAAC;YACzC,OAAO;SACR;QAED,MAAM,WAAW,GAAG,GAAG,CAAC,iBAAiB,CAAE,QAAQ,CAAE,CAAC;QACtD,QAAQ,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;QAE7B,WAAW,CAAC,EAAE,CAAE,OAAO,EAAE,GAAG,EAAE;YAC5B,MAAM,CAAE,IAAI,KAAK,CAAE,wBAAwB,CAAE,CAAE,CAAC;QAClD,CAAC,CAAE,CAAC;QACJ,WAAW,CAAC,EAAE,CAAE,QAAQ,EAAE,GAAG,EAAE;YAC7B,WAAW,CAAC,KAAK,EAAE,CAAC;YACpB,OAAO,CAAE,IAAI,CAAE,CAAC;QAClB,CAAC,CAAE,CAAC;IACN,CAAC,CAAE,CAAC;AACN,CAAC,CAAE,CAAC,KAAK,CAAE,GAAG,CAAC,EAAE;IACf,IAAc,GAAK,CAAC,OAAO,CAAC,QAAQ,CAAE,iBAAiB,CAAE,EAAG;QAC1D,OAAO,CAAC,GAAG,CAAE,0BAA0B,GAAG,EAAE,CAAE,CAAC;KAChD;SAAM;QACL,OAAO,CAAC,GAAG,CAAW,GAAK,CAAC,OAAO,CAAE,CAAC;KACvC;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAE,CAAC;AA3BS,QAAA,YAAY,gBA2BrB;AAEG,MAAM,gBAAgB,GAAG,KAAK,EAAG,eAAuB,EAAE,GAAW,EAAqB,EAAE;IACjG,IAAK,CAAC,GAAG,CAAC,UAAU,CAAE,eAAe,CAAE,EAAG;QACxC,GAAG,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAE,eAAe,CAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAE,CAAC;QACtE,MAAM,cAAc,GAAG,MAAM,IAAA,oBAAY,EAAE,GAAG,EAAE,eAAe,CAAE,CAAC;QAClE,OAAO,cAAc,CAAC;KACvB;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAPW,QAAA,gBAAgB,oBAO3B;AAEK,MAAM,2BAA2B,GAAG,KAAK,EAAG,UAAqC,EAAE,eAAuB,EAAuC,EAAE;IACxJ,MAAM,WAAW,GAAG,mCAAmC,UAAU,CAAC,IAAI,6DAA6D,CAAC;IACpI,IAAI,QAAQ,GAAuC,EAAE,CAAC;IACtD,IAAI;QACF,QAAQ,GAAG,CAAE,MAAM,eAAK,CAAC,GAAG,CAAsC,WAAW,CAAE,CAAE,CAAC,IAAI,CAAC;KACxF;IAAC,OAAQ,KAAc,EAAG;QACzB,OAAO,CAAC,GAAG,CAAE,SAAkB,KAAO,CAAC,OAAO,4DAA4D,UAAU,CAAC,IAAI,EAAE,CAAE,CAAC;KAC/H;IAED,MAAM,mBAAmB,GAA4B,EAAE,CAAC;IACxD,IAAI,gBAAM,CAAC,EAAE,CAAE,QAAQ,CAAC,OAAO,EAAE,UAAU,CAAC,OAAO,CAAE,EAAE;QACrD,IAAI;YACF,MAAM,OAAO,CAAC,GAAG,CAAE,UAAU,CAAC,KAAK,CAAC,GAAG,CAAE,KAAK,EAAC,IAAI,EAAC,EAAE;gBACpD,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAE,eAAe,EAAE,GAAG,UAAU,CAAC,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;gBAC1G,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAE,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;gBACpE,MAAM,IAAA,wBAAgB,EAAE,eAAe,EAAE,GAAG,CAAE,CAAC;gBAC/C,MAAM,cAAc,GAA0B;oBAC5C,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,IAAI,EAAE,eAAe;oBACrB,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;oBACpE,GAAG;iBACJ,CAAC;gBACF,mBAAmB,CAAC,IAAI,CAAE,cAAc,CAAE,CAAC;YAC7C,CAAC,CAAE,CAAE,CAAC;SACP;QAAC,OAAQ,KAAc,EAAG;YACzB,OAAO,CAAC,GAAG,CAAE,SAAkB,KAAO,CAAC,OAAO,4DAA4D,UAAU,CAAC,IAAI,EAAE,CAAE,CAAC;SAC/H;KACF;IACD,OAAkC;QAChC,IAAI,EAAE,UAAU,CAAC,IAAI;QACrB,KAAK,EAAE,mBAAmB;QAC1B,OAAO,EAAE,QAAQ,CAAC,OAAO;KAC1B,CAAC;AACJ,CAAC,CAAC;AAjCW,QAAA,2BAA2B,+BAiCtC;AAEK,MAAM,gCAAgC,GAAG,KAAK,EAAG,UAAqC,EAAE,eAAuB,EAAuC,EAAE;IAC7J,MAAM,WAAW,GAAG,uCAAuC,CAAC;IAC5D,IAAI,QAAQ,GAA+C,EAAE,CAAC;IAC9D,IAAI;QACF,QAAQ,GAAG,CAAE,MAAM,eAAK,CAAC,GAAG,CAA8C,WAAW,CAAE,CAAE,CAAC,IAAI,CAAC;KAChG;IAAC,OAAQ,KAAc,EAAG;QACzB,OAAO,CAAC,GAAG,CAAE,SAAkB,KAAO,CAAC,OAAO,iEAAiE,UAAU,CAAC,IAAI,EAAE,CAAE,CAAC;KACpI;IACD,MAAM,mBAAmB,GAA4B,EAAE,CAAC;IAExD,IAAI;QACF,MAAM,OAAO,CAAC,GAAG,CAAE,UAAU,CAAC,KAAK,CAAC,GAAG,CAAE,KAAK,EAAC,IAAI,EAAC,EAAE;YACpD,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAE,eAAe,EAAE,GAAG,UAAU,CAAC,IAAI,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;YACnI,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,OAAO,CAAE,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAE,CAAC;YAC/F,MAAM,cAAc,GAAG,MAAM,IAAA,wBAAgB,EAAE,eAAe,EAAE,GAAI,CAAE,CAAC;YACvE,MAAM,cAAc,GAA0B;gBAC5C,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC,cAAG,CAAC,QAAQ,CAAE,GAAG,CAAC,YAAY,CAAE,eAAe,CAAE,CAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE;gBAC9F,GAAG;aACJ,CAAC;YACF,IAAK,cAAc,EAAG;gBACpB,mBAAmB,CAAC,IAAI,CAAE,cAAc,CAAE,CAAC;aAC5C;QACH,CAAC,CAAE,CAAE,CAAC;KACP;IAAC,OAAQ,KAAc,EAAG;QACzB,OAAO,CAAC,GAAG,CAAE,SAAkB,KAAO,CAAC,OAAO,iEAAiE,UAAU,CAAC,IAAI,EAAE,CAAE,CAAC;KACpI;IACD,OAAkC;QAChC,IAAI,EAAE,UAAU,CAAC,IAAI;QACrB,KAAK,EAAE,mBAAmB;QAC1B,OAAO,EAAE,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO;KACnD,CAAC;AACJ,CAAC,CAAC;AAjCW,QAAA,gCAAgC,oCAiC3C;AAEK,MAAM,+BAA+B,GAAG,KAAK,EAAG,kBAA6C,EAAE,eAAuB,EAAE,aAAuB,EAAqB,EAAE;IAC3K,MAAM,mBAAmB,GAAG,kBAAkB,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;QAC9D,MAAM,IAAA,mCAA2B,EAAE,kBAAkB,EAAE,eAAe,CAAE,CAAC,CAAC;QAC1E,MAAM,IAAA,wCAAgC,EAAE,kBAAkB,EAAE,eAAe,CAAE,CAAC;IAChF,IAAK,mBAAmB,CAAC,OAAO,IAAI,gBAAM,CAAC,EAAE,CAAE,mBAAmB,CAAC,OAAO,EAAE,kBAAkB,CAAC,OAAO,CAAE,EAAG;QACzG,MAAM,OAAO,CAAC,GAAG,CAAE,aAAa,CAAC,GAAG,CAAE,KAAK,EAAC,YAAY,EAAC,EAAE;YACzD,IAAI,mBAAmB,GAAG,MAAM,GAAG,CAAC,QAAQ,CAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAE,CAAC;YACnF,IAAK,mBAAmB,CAAC,KAAK,CAAC,MAAM,EAAG;gBACtC,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAE,YAAY,CAAC,EAAE;oBAChD,IAAI,KAAK,GAAG,MAAM,CAAE,SAAS,YAAY,CAAC,IAAI,qBAAqB,EAAE,GAAG,CAAE,CAAC;oBAC3E,MAAM,OAAO,GAAG,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC;oBAC/F,IAAI,MAAM,GAAG,SAAS,OAAO,CAAC,GAAI,gBAAgB,OAAO,CAAC,QAAQ,GAAG,CAAC;oBACtE,mBAAmB,GAAG,mBAAmB,CAAC,OAAO,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;oBAEnE,KAAK,GAAG,MAAM,CAAE,QAAQ,YAAY,CAAC,IAAI,qBAAqB,EAAE,GAAG,CAAE,CAAC;oBACtE,MAAM,GAAG,QAAQ,OAAO,CAAC,GAAI,gBAAgB,OAAO,CAAC,QAAQ,GAAG,CAAC;oBACjE,mBAAmB,GAAG,mBAAmB,CAAC,OAAO,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;oBAEnE,KAAK,GAAG,MAAM,CAAE,cAAc,YAAY,CAAC,IAAI,EAAE,EAAE,GAAG,CAAE,CAAC;oBACzD,MAAM,GAAG,aAAa,kBAAkB,CAAC,IAAI,IAAI,mBAAmB,CAAC,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,CAAC;oBACpG,mBAAmB,GAAG,mBAAmB,CAAC,OAAO,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;gBACrE,CAAC,CAAE,CAAC;gBACJ,MAAM,GAAG,CAAC,SAAS,CAAE,YAAY,EAAE,mBAAmB,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAE,CAAC,KAAK,CAAE,KAAK,CAAC,EAAE;oBAC5F,OAAO,CAAC,GAAG,CAAW,KAAO,CAAC,OAAO,CAAE,CAAC;gBAC1C,CAAC,CAAE,CAAC;aACL;QACH,CAAC,CAAE,CAAE,CAAC;KACP;IACD,IAAI;QACF,IAAK,kBAAkB,CAAC,OAAO,KAAK,mBAAmB,CAAC,OAAO,IAAI,mBAAmB,CAAC,KAAK,CAAC,MAAM,EAAG;YACpG,OAAO,CAAC,GAAG,CAAE,YAAY,kBAAkB,CAAC,IAAI,uBAAuB,mBAAmB,CAAC,OAAO,EAAE,CAAE,CAAC;YACvG,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,EAAE;gBACnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,OAAO,CAAE,kBAAkB,CAAC,OAAO,EAAE,mBAAmB,CAAC,OAAO,CAAE,CAAC;gBACxF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAE,kBAAkB,CAAC,OAAO,EAAE,mBAAmB,CAAC,OAAO,CAAE,CAAC;gBACzF,OAAO,IAAI,CAAC;YACd,CAAC,CAAE,CAAC;YACJ,kBAAkB,CAAC,OAAO,GAAG,mBAAmB,CAAC,OAAO,CAAC;YACzD,OAAO,IAAI,CAAC;SACb;KACF;IAAC,OAAQ,GAAY,EAAG;QACvB,OAAO,CAAC,GAAG,CAAW,GAAK,CAAC,OAAO,CAAE,CAAC;KACvC;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AA3CW,QAAA,+BAA+B,mCA2C1C","sourcesContent":["import type * as Models from '../lib/models/models';\nimport * as fse from 'fs-extra';\nimport * as https from 'https';\nimport * as path from 'path';\nimport axios from 'axios';\nimport semver from 'semver';\nimport sri from 'ssri';\n\nexport const downloadFile = async ( url: string, filePath: string ): Promise<boolean> => new Promise<boolean>( ( resolve, reject ) => {\n  https.get( url, response => {\n    const statusCode = response.statusCode;\n\n    if ( statusCode !== 200 ) {\n      reject( new Error( 'Download error!' ) );\n      return;\n    }\n\n    const writeStream = fse.createWriteStream( filePath );\n    response.pipe( writeStream );\n\n    writeStream.on( 'error', () => {\n      reject( new Error( 'Error writing to file!' ) );\n    } );\n    writeStream.on( 'finish', () => {\n      writeStream.close();\n      resolve( true );\n    } );\n  } );\n} ).catch( err => {\n  if ( ( <Error>err ).message.includes( 'Download error!' ) ) {\n    console.log( `error downloading file ${url}` );\n  } else {\n    console.log( ( <Error>err ).message );\n  }\n  return false;\n} );\n\nexport const downloadResource = async ( destinationPath: string, url: string ): Promise<boolean> => {\n  if ( !fse.existsSync( destinationPath ) ) {\n    fse.mkdirSync( path.dirname( destinationPath ), { recursive: true } );\n    const downloadResult = await downloadFile( url, destinationPath );\n    return downloadResult;\n  }\n  return false;\n};\n\nexport const getCdnjsResourceInformation = async ( dependency: Models.ResourceProperties, resourcesFolder: string ): Promise<Models.ResourceProperties> => {\n  const resourceUrl = `https://api.cdnjs.com/libraries/${dependency.name}?fields=name,version,repository,assets,latest,name,filename`;\n  let response = <Models.ResourcesCdnjsApiProperties>{};\n  try {\n    response = ( await axios.get<Models.ResourcesCdnjsApiProperties>( resourceUrl ) ).data;\n  } catch ( error: unknown ) {\n    console.log( `error ${( <Error>error ).message} in function getCdnjsResourceInformation with dependency ${dependency.name}` );\n  }\n\n  const filePropertiesArray = <Models.FileProperties[]>[];\n  if( semver.gt( response.version, dependency.version ) ){ \n    try {\n      await Promise.all( dependency.files.map( async file => {\n        const destinationPath = path.join( resourcesFolder, `${dependency.name}-${response.version}`, file.name );\n        const url = response.latest.replace( response.filename, file.name );\n        await downloadResource( destinationPath, url );\n        const fileProperties = <Models.FileProperties>{\n          name: file.name,\n          path: destinationPath,\n          sriValue: response.assets[response.assets.length - 1].sri[file.name],\n          url\n        };\n        filePropertiesArray.push( fileProperties );\n      } ) );\n    } catch ( error: unknown ) {\n      console.log( `error ${( <Error>error ).message} in function getCdnjsResourceInformation with dependency ${dependency.name}` );\n    }\n  }\n  return <Models.ResourceProperties>{\n    name: dependency.name,\n    files: filePropertiesArray,\n    version: response.version\n  };\n};\n\nexport const getDatatablesResourceInformation = async ( dependency: Models.ResourceProperties, resourcesFolder: string ): Promise<Models.ResourceProperties> => {\n  const resourceUrl = 'https://datatables.net/feeds/versions';\n  let response = <Models.ResourcesCdnDatatablesApiProperties>{};\n  try {\n    response = ( await axios.get<Models.ResourcesCdnDatatablesApiProperties>( resourceUrl ) ).data;\n  } catch ( error: unknown ) {\n    console.log( `error ${( <Error>error ).message} in function getDatatablesResourceInformation with dependency ${dependency.name}` );\n  }\n  const filePropertiesArray = <Models.FileProperties[]>[];\n\n  try {\n    await Promise.all( dependency.files.map( async file => {\n      const destinationPath = path.join( resourcesFolder, `${dependency.name}-${response[dependency.name].release.version}`, file.name );\n      const url = file.url?.replace( dependency.version, response[dependency.name].release.version );\n      const fileDownloaded = await downloadResource( destinationPath, url! );\n      const fileProperties = <Models.FileProperties>{\n        name: file.name,\n        path: destinationPath,\n        sriValue: fileDownloaded ? sri.fromData( fse.readFileSync( destinationPath ) ).toString() : '',\n        url\n      };\n      if ( fileDownloaded ) {\n        filePropertiesArray.push( fileProperties );\n      }\n    } ) );\n  } catch ( error: unknown ) {\n    console.log( `error ${( <Error>error ).message} in function getDatatablesResourceInformation with dependency ${dependency.name}` );\n  }\n  return <Models.ResourceProperties>{\n    name: dependency.name,\n    files: filePropertiesArray,\n    version: response[dependency.name].release.version\n  };\n};\n\nexport const updateResourcesForOneDependency = async ( resourceProperties: Models.ResourceProperties, resourcesFolder: string, templateFiles: string[] ): Promise<boolean> => {\n  const resourceInformation = resourceProperties.cdn === 'cdnjs' ?\n    await getCdnjsResourceInformation( resourceProperties, resourcesFolder ) :\n    await getDatatablesResourceInformation( resourceProperties, resourcesFolder );\n  if ( resourceInformation.version && semver.gt( resourceInformation.version, resourceProperties.version ) ) {\n    await Promise.all( templateFiles.map( async templateFile => {\n      let templateFileContent = await fse.readFile( templateFile, { encoding: 'utf8' } );\n      if ( resourceInformation.files.length ) {\n        resourceInformation.files.forEach( resourceFile => {\n          let regex = RegExp( `href.*${resourceFile.name}\" integrity=\"[^\"]+\"`, 'u' );\n          const newFile = resourceInformation.files.filter( file => file.name === resourceFile.name )[0];\n          let newUrl = `href=\"${newFile.url!}\" integrity=\"${newFile.sriValue}\"`;\n          templateFileContent = templateFileContent.replace( regex, newUrl );\n\n          regex = RegExp( `src.*${resourceFile.name}\" integrity=\"[^\"]+\"`, 'u' );\n          newUrl = `src=\"${newFile.url!}\" integrity=\"${newFile.sriValue}\"`;\n          templateFileContent = templateFileContent.replace( regex, newUrl );\n\n          regex = RegExp( `resources.*${resourceFile.name}`, 'u' );\n          newUrl = `resources/${resourceProperties.name}-${resourceInformation.version}/${resourceFile.name}`;\n          templateFileContent = templateFileContent.replace( regex, newUrl );\n        } );\n        await fse.writeFile( templateFile, templateFileContent, { encoding: 'utf8' } ).catch( error => {\n          console.log( ( <Error>error ).message );\n        } );\n      }\n    } ) );\n  }\n  try {\n    if ( resourceProperties.version !== resourceInformation.version && resourceInformation.files.length ) {\n      console.log( `Resource ${resourceProperties.name} updated to version ${resourceInformation.version}` );\n      resourceProperties.files.map( file => {\n        file.url = file.url?.replace( resourceProperties.version, resourceInformation.version );\n        file.path = file.path.replace( resourceProperties.version, resourceInformation.version );\n        return file;\n      } );\n      resourceProperties.version = resourceInformation.version;\n      return true;\n    }\n  } catch ( err: unknown ) {\n    console.log( ( <Error>err ).message );\n  }\n  return false;\n};"]}